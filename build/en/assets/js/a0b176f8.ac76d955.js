"use strict";(self.webpackChunkNacos=self.webpackChunkNacos||[]).push([[9623],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),v=n,f=p["".concat(s,".").concat(v)]||p[v]||d[v]||i;return a?r.createElement(f,o(o({ref:t},u),{},{components:a})):r.createElement(f,o({ref:t},u))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=v;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}v.displayName="MDXCreateElement"},37272:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const i={title:"Java Client Failover",keywords:["Failover"],description:"Java client failover user guide"},o="Java Client Failover",l={unversionedId:"v2/guide/user/failover",id:"version-2.X/v2/guide/user/failover",title:"Java Client Failover",description:"Java client failover user guide",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-2.X/v2/guide/user/failover.md",sourceDirName:"v2/guide/user",slug:"/v2/guide/user/failover",permalink:"/en/docs/v2/guide/user/failover",draft:!1,tags:[],version:"2.X",frontMatter:{title:"Java Client Failover",keywords:["Failover"],description:"Java client failover user guide"},sidebar:"docs",previous:{title:"\u53c2\u6570\u6821\u9a8c",permalink:"/en/docs/v2/guide/user/parameters-check"},next:{title:"Nacos supports three types of deployment modes",permalink:"/en/docs/v2/guide/admin/deployment"}},s={},c=[{value:"Procedures",id:"procedures",level:2},{value:"Disk based Failover",id:"disk-based-failover",level:2},{value:"Disk Failover File Path",id:"disk-failover-file-path",level:3},{value:"Disk Failover Switch",id:"disk-failover-switch",level:3},{value:"Disk Failover Data",id:"disk-failover-data",level:3},{value:"Extent Failover Data Source",id:"extent-failover-data-source",level:2},{value:"Develop Your Own Failover Data Source",id:"develop-your-own-failover-data-source",level:3},{value:"Configure Failover Data Source Class",id:"configure-failover-data-source-class",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"java-client-failover"},"Java Client Failover"),(0,n.kt)("p",null,"We can turn on the local data failover feature to handle the situation when Nacos server side is unstable or has problematic data."),(0,n.kt)("p",null,"There are two typical scenarios:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"When Nacos server is in deployment, we can switch on the failover so the clients use local data only. The data anomaly or oscillation at Nacos server won't affect the clients. After the deployment and the data verification are done, we can switch off the failover feature."),(0,n.kt)("li",{parentName:"ol"},"When there is a sudden data anomaly at Nacos server at runtime, we can turn on the failover feature to prevent Nacos clients using wrong data.")),(0,n.kt)("p",null,"The full detailed solution description can be found in ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/alibaba/nacos/issues/11053"},"https://github.com/alibaba/nacos/issues/11053")),(0,n.kt)("h2",{id:"procedures"},"Procedures"),(0,n.kt)("img",{width:"1000",alt:"image",src:"https://github.com/alibaba/nacos/assets/4593375/f9011075-11b8-401b-9dbb-1366347a9a44"}),(0,n.kt)("p",null,"As shown above, the query requests to Nacos client would first be checked by FailoverReactor, and only if FailoverReactor has no related data, can the requests move on to query ServiceInfoHolder."),(0,n.kt)("h2",{id:"disk-based-failover"},"Disk based Failover"),(0,n.kt)("p",null,"FailoverReactor can select different data sources. Disk is the default option."),(0,n.kt)("h3",{id:"disk-failover-file-path"},"Disk Failover File Path"),(0,n.kt)("p",null,"The default path of disk failover files are:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"{user.home}/nacos/naming/{namespace}/failover\n")),(0,n.kt)("p",null,"This path can be customised via -D argument:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"-DJM.SNAPSHOT.PATH=/mypath\n")),(0,n.kt)("p",null,"So the path becomes:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"/mypath/nacos/naming/{namespace}/failover\n")),(0,n.kt)("h3",{id:"disk-failover-switch"},"Disk Failover Switch"),(0,n.kt)("p",null,"The disk failover switch is stored in a file with name:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"00-00---000-VIPSRV_FAILOVER_SWITCH-000---00-00\n")),(0,n.kt)("p",null,"The content of this file is just a number 0 or 1, where 0 represents failover is off, 1 is on."),(0,n.kt)("h3",{id:"disk-failover-data"},"Disk Failover Data"),(0,n.kt)("p",null,"The disk failover data is stored in multiple files under the failover path. Each file stores the failover data for a single service."),(0,n.kt)("p",null,"The file name is in the following format:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"{group.name}%40%40{service.name}\n")),(0,n.kt)("p",null,"The content in the file is the JSON string of one ServiceInfo object, for instance:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'{\n    "name":"DEFAULT_GROUP@@test.2",\n    "groupName":"DEFAULT_GROUP",\n    "clusters":"",\n    "cacheMillis":10000,\n    "hosts":[\n        {\n            "instanceId":"1.1.2.1#8888#DEFAULT#DEFAULT_GROUP@@test.2",\n            "ip":"1.1.2.1",\n            "port":8888,\n            "weight":1,\n            "healthy":true,\n            "enabled":true,\n            "ephemeral":true,\n            "clusterName":"DEFAULT",\n            "serviceName":"DEFAULT_GROUP@@test.2",\n            "metadata":{\n                "k1":"v1"\n            },\n            "instanceHeartBeatInterval":5000,\n            "instanceHeartBeatTimeOut":15000,\n            "ipDeleteTimeout":30000\n        }\n    ],\n    "lastRefTime":1689835375819,\n    "checksum":"",\n    "allIPs":false,\n    "reachProtectionThreshold":false,\n    "valid":true\n}\n')),(0,n.kt)("h2",{id:"extent-failover-data-source"},"Extent Failover Data Source"),(0,n.kt)("p",null,"Disk failover is simple and requires no extra remote components. But sometimes we may want to use another kind of data source, such as Redis, Mysql, etc."),(0,n.kt)("p",null,"Now we support extending the failover data source with SPI mechanism. Here are the steps:"),(0,n.kt)("h3",{id:"develop-your-own-failover-data-source"},"Develop Your Own Failover Data Source"),(0,n.kt)("p",null,"Write a class and implement the interface com.alibaba.nacos.client.naming.backups.FailoverDataSource:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"public class MyFailoverDataSource implements FailoverDataSource {\n    \n    @Override\n    public FailoverSwitch getSwitch() {\n        // TODO write your own implementation.\n        return null;\n    }\n    \n    @Override\n    public Map<String, FailoverData> getFailoverData() {\n        // TODO write your own implementation. For naming module, the map\n        // should contain failover data with service name as key and ServiceInfo as value\n        return null;\n    }\n}\n")),(0,n.kt)("h3",{id:"configure-failover-data-source-class"},"Configure Failover Data Source Class"),(0,n.kt)("p",null,"Create a file under the resource root path:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"{resource.root}/META-INF/services/com.alibaba.nacos.client.naming.backups.FailoverDataSource\n")),(0,n.kt)("p",null,"One example of ",(0,n.kt)("inlineCode",{parentName:"p"},"{resource.root}")," is src/main/resources."),(0,n.kt)("p",null,"The file content is:   "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"your.package.MyFailoverDataSource\n")))}d.isMDXComponent=!0}}]);