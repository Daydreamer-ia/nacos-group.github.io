"use strict";(self.webpackChunkNacos=self.webpackChunkNacos||[]).push([[5206],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(g,s(s({ref:n},p),{},{components:t})):o.createElement(g,s({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<a;c++)s[c]=t[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},57668:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=t(87462),r=(t(67294),t(3905));const a={title:"Nacos push xDS with Istio",keywords:["Istio","xDs","Envoy"],description:"Nacos push xDS with Istio"},s="Istio Guide",i={unversionedId:"v2/ecology/use-nacos-with-istio",id:"v2/ecology/use-nacos-with-istio",title:"Nacos push xDS with Istio",description:"Nacos push xDS with Istio",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/v2/ecology/use-nacos-with-istio.md",sourceDirName:"v2/ecology",slug:"/v2/ecology/use-nacos-with-istio",permalink:"/en/docs/next/v2/ecology/use-nacos-with-istio",draft:!1,tags:[],version:"current",frontMatter:{title:"Nacos push xDS with Istio",keywords:["Istio","xDs","Envoy"],description:"Nacos push xDS with Istio"}},l={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Server",id:"server",level:3},{value:"Client",id:"client",level:3},{value:"RUN",id:"run",level:2},{value:"CDS Example",id:"cds-example",level:2},{value:"EDS Example",id:"eds-example",level:2},{value:"Full CDS Example",id:"full-cds-example",level:2},{value:"Incremental EDS Example",id:"incremental-eds-example",level:2}],p={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"istio-guide"},"Istio Guide"),(0,r.kt)("p",null,"It supports CDS and EDS in xDS protocol, and realizes incremental push for EDS and MCP. Users can use Envoy or other XDS protocol-enabled clients to dock with Nacos for service discovery."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("h3",{id:"server"},"Server"),(0,r.kt)("p",null,"For distribution packages:"),(0,r.kt)("p",null,"modify ",(0,r.kt)("inlineCode",{parentName:"p"},"nacos.istio.mcp.server.enabled")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"nacos/conf/application.properties")," to true."),(0,r.kt)("p",null,"For source code:"),(0,r.kt)("p",null,"modify ",(0,r.kt)("inlineCode",{parentName:"p"},"nacos.istio.mcp.server.enabled"),"  in ",(0,r.kt)("inlineCode",{parentName:"p"},"nacos/distribution/conf/application.properties")," to true."),(0,r.kt)("p",null,"For incremental MCP:"),(0,r.kt)("p",null,"modify ",(0,r.kt)("inlineCode",{parentName:"p"},"nacos.istio.server.full ")," in  ",(0,r.kt)("inlineCode",{parentName:"p"},"nacos/istio/misc/IstioConfig"),"  to false in addition to the above configuration."),(0,r.kt)("h3",{id:"client"},"Client"),(0,r.kt)("p",null,"In the following example, using Envoy, you can download the Envoy directly or create a mirror and mount the following configuration file."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Config")," : the port number used can be changed on demand."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'node:\n  cluster: test-cluster\n  id: test-idn\n\nadmin:\n  address:\n    socket_address: { address: 0.0.0.0, port_value: 15000 }\n\ndynamic_resources:\n  ads_config:\n    api_type: GRPC\n    transport_api_version: V3\n    grpc_services:\n    - envoy_grpc:\n        cluster_name: nacos_xds\n  cds_config:\n    ads: {}\n  lds_config:\n    path: /etc/envoy/lds.yaml\n  # ads: {}\n\nstatic_resources:\n  clusters:\n  - type: STATIC\n    connect_timeout: 1s\n    typed_extension_protocol_options:\n      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\n        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\n        explicit_http_config:\n          http2_protocol_options: {}\n    name: nacos_xds \n    load_assignment:\n      cluster_name: nacos_xds \n      endpoints:\n      - lb_endpoints:\n        - endpoint:\n            address:\n              socket_address:\n                address: 127.0.0.1 \n                port_value: 18848\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"lds")," : when Envoy acquires a listening service, it automatically acquires EDS from the server. The listening service can change as needed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'resources:\n- "@type": type.googleapis.com/envoy.config.listener.v3.Listener\n  name: listener_0\n  address:\n    socket_address: { address: 0.0.0.0, port_value: 80 }\n  # listener_filters:\n  # - name: "envoy.filters.listener.tls_inspector"\n  filter_chains:\n  - filters:\n    - name: envoy.filters.network.http_connection_manager\n      typed_config:\n        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\n        stat_prefix: ingress_http\n        access_log:\n        - name: envoy.access_loggers.stdout\n          typed_config:\n            "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog\n        codec_type: AUTO\n        route_config:\n          name: local_route\n          virtual_hosts:\n          - name: local_service\n            domains: ["*"]\n            routes:\n            - match: { prefix: "/" }\n              name: test\n              route:\n                cluster: outbound|8071||service-provider.DEFAULT-GROUP.e77d7925-1c90-4fa9-93cb-83153a099636.nacos\n        http_filters:\n        - name: envoy.filters.http.router\n')),(0,r.kt)("h2",{id:"run"},"RUN"),(0,r.kt)("p",null,"Note: each instance of the same service should use the same protocol, EDS default to use incremental push."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Deploy Nacos, ",(0,r.kt)("a",{parentName:"p",href:"https://nacos.io/zh-cn/docs/quick-start.html"}," deployment reference "),";")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Modify the configuration in accordance with the above requirements;")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start the server, the detailed start command can be seen in the above deployment reference;"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bash startup.sh -m standalone -p embedded\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start the client."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker start envoy\n")))),(0,r.kt)("h2",{id:"cds-example"},"CDS Example"),(0,r.kt)("p",null,"Note: The logs are viewed in nacos/logs/istio-main.log"),(0,r.kt)("p",null,"The service configuration registered in the example is as follows, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nacos-group/nacos-examples/tree/master/nacos-spring-cloud-example/nacos-spring-cloud-discovery-example"}," example reference "),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties"},"server.port=8071\nspring.application.name=service-provider\nspring.cloud.nacos.discovery.namespace=e77d7925-1c90-4fa9-93cb-83153a099636\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://cdn.nlark.com/yuque/0/2022/png/28990648/1666247341241-4e9b2dde-55c7-43ae-af1e-dc081565ab72.png",alt:"CDS"})),(0,r.kt)("h2",{id:"eds-example"},"EDS Example"),(0,r.kt)("p",null,"The service is configured as above."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://cdn.nlark.com/yuque/0/2022/png/28990648/1666247341176-fe312687-6488-41c2-bdd1-346d7a344bd2.png",alt:"EDS"})),(0,r.kt)("h2",{id:"full-cds-example"},"Full CDS Example"),(0,r.kt)("p",null,"The services are registered with the following configurations:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties"},"#service-provider\nserver.port=8071\nspring.application.name=service-provider\nspring.cloud.nacos.discovery.namespace=e77d7925-1c90-4fa9-93cb-83153a099636\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n\n#service-consumer\nserver.port=8080\nspring.application.name=service-consumer\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n")),(0,r.kt)("p",null,"In the console, modify only the service-consumer service configuration, push as follows:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://cdn.nlark.com/yuque/0/2022/png/28990648/1666247341233-bc35de56-5653-4d5f-a510-819180dfe7f0.png",alt:"Full CDS"})),(0,r.kt)("h2",{id:"incremental-eds-example"},"Incremental EDS Example"),(0,r.kt)("p",null,"In the console, modify only the service-consumer instance configuration, push as follows:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://cdn.nlark.com/yuque/0/2022/png/28990648/1666247341234-aa195810-c76d-4ff5-977a-55626775e697.png",alt:"Incremental EDS"})))}u.isMDXComponent=!0}}]);