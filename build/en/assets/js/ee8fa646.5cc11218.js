"use strict";(self.webpackChunkNacos=self.webpackChunkNacos||[]).push([[5550],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(87462),o=(n(67294),n(3905));const r={title:"Nacos with Spring Cloud Projects",keywords:["Nacos","Spring Cloud"],description:"Quick Start for Nacos Spring Cloud Projects"},i="Nacos with Spring Cloud Projects",l={unversionedId:"v2/ecology/use-nacos-with-spring-cloud",id:"v2/ecology/use-nacos-with-spring-cloud",title:"Nacos with Spring Cloud Projects",description:"Quick Start for Nacos Spring Cloud Projects",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/v2/ecology/use-nacos-with-spring-cloud.md",sourceDirName:"v2/ecology",slug:"/v2/ecology/use-nacos-with-spring-cloud",permalink:"/en/docs/next/v2/ecology/use-nacos-with-spring-cloud",draft:!1,tags:[],version:"current",frontMatter:{title:"Nacos with Spring Cloud Projects",keywords:["Nacos","Spring Cloud"],description:"Quick Start for Nacos Spring Cloud Projects"},sidebar:"docs",previous:{title:"Nacos with Spring Boot Projects",permalink:"/en/docs/next/v2/ecology/use-nacos-with-spring-boot"},next:{title:"NacosSync user guide",permalink:"/en/docs/next/v2/ecology/use-nacos-sync"}},s={},c=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Enable Configuration Service",id:"enable-configuration-service",level:2},{value:"Enable Service Discovery",id:"enable-service-discovery",level:2},{value:"Related Projects",id:"related-projects",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nacos-with-spring-cloud-projects"},"Nacos with Spring Cloud Projects"),(0,o.kt)("p",null,"This quick start introduces how to enable Nacos configuration management and service discovery features for your Spring Cloud project."),(0,o.kt)("p",null,"For more details about Nacos Spring Cloud: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/spring-cloud-incubator/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-docs/src/main/asciidoc/nacos-config.adoc"},"Nacos Config")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/spring-cloud-incubator/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-docs/src/main/asciidoc/nacos-discovery.adoc"},"Nacos Discovery"),"."),(0,o.kt)("p",null,"The quick start includes two samples:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"How to enable dynamic configuration updates with Nacos server and spring-cloud-starter-alibaba-nacos-config;"),(0,o.kt)("li",{parentName:"ul"},"How to enable service registration and discovery with Nacos server and spring-cloud-starter-alibaba-nacos-discovery.")),(0,o.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,o.kt)("p",null,"Follow instructions in ",(0,o.kt)("a",{parentName:"p",href:"/en/docs/next/v2/quickstart/quick-start"},"Nacos Quick Start")," to download Nacos and start the Nacos server."),(0,o.kt)("h2",{id:"enable-configuration-service"},"Enable Configuration Service"),(0,o.kt)("p",null,"Once you start the Nacos server, you can follow the steps below to enable the Nacos configuration management service for your Spring Cloud project. "),(0,o.kt)("p",null,"Sample project: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nacos-group/nacos-examples/tree/master/nacos-spring-cloud-example/nacos-spring-cloud-config-example"},"nacos-spring-cloud-config-example")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add the Nacos Spring\xa0Cloud dependency.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>com.alibaba.cloud</groupId>\n    <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>\n    <version>${latest.version}</version>\n</dependency>\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note"),": Version ",(0,o.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config"},"2.1.x.RELEASE")," is compatible with the Spring Boot 2.1.x line. Version ",(0,o.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config"},"2.0.x.RELEASE")," is compatible with the Spring Boot 2.0.x line. Version ",(0,o.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config"},"1.5.x.RELEASE")," is compatible with the Spring Boot 1.5.x line."),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Configure the Nacos Server address and Specify the application name in ",(0,o.kt)("inlineCode",{parentName:"li"},"bootstrap.properties")," :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"spring.cloud.nacos.config.server-addr=127.0.0.1:8848\n\nspring.application.name=example\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note"),": The value of ",(0,o.kt)("inlineCode",{parentName:"p"},"spring.application.name"),"\xa0will be used to construct part of the dataId in Nacos configuration management."),(0,o.kt)("p",null,"In Nacos Spring Cloud, the format of ",(0,o.kt)("inlineCode",{parentName:"p"},"dataId")," is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plain"},"${prefix}-${spring.profiles.active}.${file-extension}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The value of ",(0,o.kt)("inlineCode",{parentName:"li"},"prefix"),"\xa0is the value of\xa0",(0,o.kt)("inlineCode",{parentName:"li"},"spring.application.name"),"\xa0by default. You can also configure this value in ",(0,o.kt)("inlineCode",{parentName:"li"},"spring.cloud.nacos.config.prefix"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spring.profiles.active"),"\xa0is the profile of the current environment. For more details, refer to\xa0",(0,o.kt)("a",{parentName:"li",href:"https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-profiles.html#boot-features-profiles"},"Spring Boot Document"),".\n",(0,o.kt)("strong",{parentName:"li"},"Note: When the value of ",(0,o.kt)("inlineCode",{parentName:"strong"},"spring.profiles.active")," is empty, the corresponding hyphen\xa0",(0,o.kt)("inlineCode",{parentName:"strong"},"-")," will be deleted, and the format of dataId becomes:\xa0",(0,o.kt)("inlineCode",{parentName:"strong"},"${prefix}.${file-extension}"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"file-exetension"),"\xa0is the data format of the configuration content, and can be configured in ",(0,o.kt)("inlineCode",{parentName:"li"},"spring.cloud.nacos.config.file-extension")," . Currently only the ",(0,o.kt)("inlineCode",{parentName:"li"},"properties")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"yaml"),"\xa0type is supported.")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Add the native ",(0,o.kt)("inlineCode",{parentName:"li"},"@RefreshScope")," annotation of Spring Cloud to enable autorefresh of configuration updates:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'@RestController\n@RequestMapping("/config")\n@RefreshScope\npublic class ConfigController {\n\n    @Value("${useLocalCache:false}")\n    private boolean useLocalCache;\n\n    @RequestMapping("/get")\n    public boolean get() {\n        return useLocalCache;\n    }\n}\n')),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"Call ",(0,o.kt)("a",{parentName:"li",href:"/en/docs/next/v2/guide/user/open-api"},"Nacos Open API")," to publish a configuration to the Nacos server. Assume the dataId is ",(0,o.kt)("inlineCode",{parentName:"li"},"example.properties"),"\uff0cand the content is ",(0,o.kt)("inlineCode",{parentName:"li"},"useLocalCache=true"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'curl -X POST "http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=example.properties&group=DEFAULT_GROUP&content=useLocalCache=true"\n')),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"NacosConfigApplication"),"and call  ",(0,o.kt)("inlineCode",{parentName:"p"},"curl http://localhost:8080/config/get"),"\uff0cYou will get a returned value of ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Call ",(0,o.kt)("a",{parentName:"p",href:"/en/docs/next/v2/guide/user/open-api"},"Nacos Open API")," again to publish an updated configuration to the Nacos server. Assume the dataId is",(0,o.kt)("inlineCode",{parentName:"p"},"example.properties"),"\uff0cand the content is ",(0,o.kt)("inlineCode",{parentName:"p"},"useLocalCache=false"),"."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'curl -X POST "http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=example.properties&group=DEFAULT_GROUP&content=useLocalCache=false"\n')),(0,o.kt)("ol",{start:8},(0,o.kt)("li",{parentName:"ol"},"Access ",(0,o.kt)("inlineCode",{parentName:"li"},"http://localhost:8080/config/get"),"again and the returned value became ",(0,o.kt)("inlineCode",{parentName:"li"},"false"),"\uff0cindicating that the value of ",(0,o.kt)("inlineCode",{parentName:"li"},"useLocalCache"),"in your application has been updated.")),(0,o.kt)("h2",{id:"enable-service-discovery"},"Enable Service Discovery"),(0,o.kt)("p",null,"Now you would also like to enable the service discovery feature of Nacos in your Spring Cloud project. "),(0,o.kt)("p",null,"Sample project: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nacos-group/nacos-examples/tree/master/nacos-spring-cloud-example/nacos-spring-cloud-discovery-example"},"nacos-spring-cloud-discovery-example")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add the Nacos Spring Cloud dependency.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>com.alibaba.cloud</groupId>\n    <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n    <version>${latest.version}</version>\n</dependency>\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note"),": Version ",(0,o.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-discovery"},"2.1.x.RELEASE")," is compatible with the Spring Boot 2.1.x line. Version ",(0,o.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-discovery"},"2.0.x.RELEASE")," is compatible with the Spring Boot 2.0.x line. Version ",(0,o.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-discovery"},"1.5.x.RELEASE")," is compatible with the Spring Boot 1.5.x line."),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Configure the service provider, so that it can register its services to the Nacos server."),(0,o.kt)("p",{parentName:"li"},"i. Add the Nacos server address in ",(0,o.kt)("inlineCode",{parentName:"p"},"application.properties")," :"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"server.port=8070\nspring.application.name=service-provider\n\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n")),(0,o.kt)("p",null,"ii. Enable service discovery by adding the Spring Cloud native annotation of ",(0,o.kt)("inlineCode",{parentName:"p"},"@EnableDiscoveryClient"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'@SpringBootApplication\n@EnableDiscoveryClient\npublic class NacosProviderApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(NacosProviderApplication.class, args);\n    }\n\n    @RestController\n    class EchoController {\n        @RequestMapping(value = "/echo/{string}", method = RequestMethod.GET)\n        public String echo(@PathVariable String string) {\n            return "Hello Nacos Discovery " + string;\n        }\n    }\n}\n')),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Configure the service consumer so that it can discover the services that it would like to call on the Nacos server.")),(0,o.kt)("p",null,"i. Configure the Nacos server address in ",(0,o.kt)("inlineCode",{parentName:"p"},"application.properties")," :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"server.port=8080\nspring.application.name=service-consumer\n\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n")),(0,o.kt)("p",null,"ii. Add the Spring Cloud native annotation of ",(0,o.kt)("inlineCode",{parentName:"p"},"@EnableDiscoveryClient"),"  to enable service discovery. Add the ",(0,o.kt)("inlineCode",{parentName:"p"},"@LoadBalanced")," annotation for the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-resttemplate.html"},"RestTemplate")," instance, \xa0and enable the integration of ",(0,o.kt)("inlineCode",{parentName:"p"},"@LoadBalanced")," and ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-ribbon.html"},"Ribbon"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'@SpringBootApplication\n@EnableDiscoveryClient\npublic class NacosConsumerApplication {\n\n    @LoadBalanced\n    @Bean\n    public RestTemplate restTemplate() {\n        return new RestTemplate();\n    }\n\n    public static void main(String[] args) {\n        SpringApplication.run(NacosConsumerApplication.class, args);\n    }\n\n    @RestController\n    public class TestController {\n\n        private final RestTemplate restTemplate;\n\n        @Autowired\n        public TestController(RestTemplate restTemplate) {this.restTemplate = restTemplate;}\n\n        @RequestMapping(value = "/echo/{str}", method = RequestMethod.GET)\n        public String echo(@PathVariable String str) {\n            return restTemplate.getForObject("http://service-provider/echo/" + str, String.class);\n        }\n    }\n}\n')),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Start ",(0,o.kt)("inlineCode",{parentName:"li"},"ProviderApplication")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"ConsumerApplication")," , and call ",(0,o.kt)("inlineCode",{parentName:"li"},"http://localhost:8080/echo/2018"),". You will get a returned message of ",(0,o.kt)("inlineCode",{parentName:"li"},"Hello Nacos Discovery 2018"),".")),(0,o.kt)("h2",{id:"related-projects"},"Related Projects"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/alibaba/nacos"},"Nacos")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/nacos-group/nacos-spring-project"},"Nacos Spring")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/nacos-group/nacos-spring-boot-project"},"Nacos Spring Boot")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/alibaba/spring-cloud-alibaba"},"Spring Cloud Alibaba"))))}d.isMDXComponent=!0}}]);