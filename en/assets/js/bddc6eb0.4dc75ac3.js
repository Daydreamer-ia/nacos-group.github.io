"use strict";(self.webpackChunkNacos=self.webpackChunkNacos||[]).push([[2964],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,g=d["".concat(o,".").concat(m)]||d[m]||u[m]||i;return a?n.createElement(g,l(l({ref:t},c),{},{components:a})):n.createElement(g,l({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},12121:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"Java SDK",keywords:["Java","SDK"],description:"Java SDK"},l="Java SDK",s={unversionedId:"sdk",id:"version-2.X/sdk",title:"Java SDK",description:"Java SDK",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-2.X/sdk.md",sourceDirName:".",slug:"/sdk",permalink:"/en/docs/sdk",draft:!1,tags:[],version:"2.X",frontMatter:{title:"Java SDK",keywords:["Java","SDK"],description:"Java SDK"}},o={},p=[{value:"Overview",id:"overview",level:2},{value:"Configuration Management",id:"configuration-management",level:2},{value:"Get configuration",id:"get-configuration",level:3},{value:"Description",id:"description",level:4},{value:"Request parameters",id:"request-parameters",level:4},{value:"Return values",id:"return-values",level:4},{value:"Request example",id:"request-example",level:4},{value:"Exception specification",id:"exception-specification",level:4},{value:"Listen configuration",id:"listen-configuration",level:3},{value:"Description",id:"description-1",level:4},{value:"Request parameters",id:"request-parameters-1",level:4},{value:"Return values",id:"return-values-1",level:4},{value:"Request example",id:"request-example-1",level:4},{value:"Delete Listening",id:"delete-listening",level:3},{value:"Description",id:"description-2",level:4},{value:"Request parameters",id:"request-parameters-2",level:4},{value:"Request example",id:"request-example-2",level:4},{value:"Publish configuration",id:"publish-configuration",level:3},{value:"Description",id:"description-3",level:4},{value:"Request parameters",id:"request-parameters-3",level:4},{value:"Response parameters",id:"response-parameters",level:4},{value:"Request example",id:"request-example-3",level:4},{value:"Exceptions",id:"exceptions",level:4},{value:"Delete configuration",id:"delete-configuration",level:3},{value:"Description",id:"description-4",level:4},{value:"Request parameters",id:"request-parameters-4",level:4},{value:"Response parameters",id:"response-parameters-1",level:4},{value:"Request example",id:"request-example-4",level:4},{value:"Exceptions",id:"exceptions-1",level:4},{value:"Service Discovery SDK",id:"service-discovery-sdk",level:2},{value:"Register Instance",id:"register-instance",level:3},{value:"Description",id:"description-5",level:4},{value:"Request Parameters",id:"request-parameters-5",level:4},{value:"Response",id:"response",level:4},{value:"Request Example",id:"request-example-5",level:4},{value:"Deregister Instance",id:"deregister-instance",level:3},{value:"Description",id:"description-6",level:4},{value:"Request Parameters",id:"request-parameters-6",level:4},{value:"Response",id:"response-1",level:4},{value:"Request Example",id:"request-example-6",level:4},{value:"Get all instances of service",id:"get-all-instances-of-service",level:3},{value:"Description",id:"description-7",level:4},{value:"Request Parameters",id:"request-parameters-7",level:4},{value:"Response",id:"response-2",level:4},{value:"Request Example",id:"request-example-7",level:4},{value:"Get filtered list of instance",id:"get-filtered-list-of-instance",level:3},{value:"Description",id:"description-8",level:4},{value:"Request Parameters",id:"request-parameters-8",level:4},{value:"Response",id:"response-3",level:4},{value:"Request Example",id:"request-example-8",level:4},{value:"Get one healthy instance",id:"get-one-healthy-instance",level:3},{value:"Description",id:"description-9",level:4},{value:"Request Parameters",id:"request-parameters-9",level:4},{value:"Response",id:"response-4",level:4},{value:"Request Example",id:"request-example-9",level:4},{value:"Listen Service",id:"listen-service",level:3},{value:"Description",id:"description-10",level:4},{value:"Request Parameters",id:"request-parameters-10",level:4},{value:"Response",id:"response-5",level:4},{value:"Request Example",id:"request-example-10",level:4},{value:"Unlisten Service",id:"unlisten-service",level:3},{value:"Description",id:"description-11",level:4},{value:"Request Parameters",id:"request-parameters-11",level:4},{value:"Response",id:"response-6",level:4},{value:"Request Example",id:"request-example-11",level:4}],c={toc:p},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"java-sdk"},"Java SDK"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Maven coordinates"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>com.alibaba.nacos</groupId>\n    <artifactId>nacos-client</artifactId>\n    <version>${version}</version>\n</dependency>\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The latest version of 1.X is 1.4.4")),(0,r.kt)("h2",{id:"configuration-management"},"Configuration Management"),(0,r.kt)("h3",{id:"get-configuration"},"Get configuration"),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"Get configuration from Nacos when a service starts."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public String getConfig(String dataId, String group, long timeoutMs) throws NacosException\n")),(0,r.kt)("h4",{id:"request-parameters"},"Request parameters"),(0,r.kt)("div",{class:"bi-table"},(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",{width:"auto"}),(0,r.kt)("col",{width:"auto"}),(0,r.kt)("col",{width:"auto"})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Name")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Type")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Description"))),(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"dataId")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"string"),(0,r.kt)("div",{"data-type":"p"})),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},'Configuration ID. Use a naming rule similar to package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the "class" section. Use lower case for all characters. Use alphabetical letters and these four special characters (".", ":", "-", "_") only. Up to 256 characters are allowed.'))),(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"group")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"string")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Configuration group. To ensure uniqueness, format such as ",(0,r.kt)("strong",null,"product name: module name "),'(for example, Nacos:Test) is preferred. Use alphabetical letters and these four special characters (".", ":", "-", "_") only. Up to 128 characters are allowed.'))),(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"timeout")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"long")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Length of configuration read time-out (in ms). Recommended value: 3000.")))))),(0,r.kt)("h4",{id:"return-values"},"Return values"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"configuration value")))),(0,r.kt)("h4",{id:"request-example"},"Request example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'try {\n    // Initialize the configuration service, and the console automatically obtains the following parameters through the sample code.\n    String serverAddr = "{serverAddr}";\n    String dataId = "{dataId}";\n    String group = "{group}";\n    Properties properties = new Properties();\n    properties.put("serverAddr", serverAddr);\n    ConfigService configService = NacosFactory.createConfigService(properties);\n    // Actively get the configuration.\n    String content = configService.getConfig(dataId, group, 5000);\n    System.out.println(content);\n} catch (NacosException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n}\n')),(0,r.kt)("h4",{id:"exception-specification"},"Exception specification"),(0,r.kt)("p",null,"A ConfigException is thrown in case of a configuration read time-out or a network error."),(0,r.kt)("h3",{id:"listen-configuration"},"Listen configuration"),(0,r.kt)("h4",{id:"description-1"},"Description"),(0,r.kt)("p",null,"Use dynamic configuration listening API to enable Nacos to send configuration change notifications."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public void addListener(String dataId, ConfigChangeListenerAdapter listener)\n")),(0,r.kt)("h4",{id:"request-parameters-1"},"Request parameters"),(0,r.kt)("div",{class:"bi-table"},(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",{width:"auto"}),(0,r.kt)("col",{width:"auto"}),(0,r.kt)("col",{width:"auto"})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Name")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Type")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Description"))),(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"dataId")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"string")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},'Configuration ID. Use a naming rule similar to package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the "class" section. Use lower case for all characters. Use alphabetical letters and these four special characters (".", ":", "-", "_") only. Up to 256 characters are allowed.'))),(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"group")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"string")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Configuration group. To ensure uniqueness, format such as ",(0,r.kt)("strong",null,"product name: module name "),' (for example, Nacos:Test) is preferred. Use alphabetical letters and these four special characters (".", ":", "-", "_") only. Up to 128 characters are allowed.'))),(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"listener")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Config Change Listener")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Listener. Configuration changes go into the callback function of the listener.")))))),(0,r.kt)("h4",{id:"return-values-1"},"Return values"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Configuration value. This value is returned through the callback function during initialization or configuration modification.")))),(0,r.kt)("h4",{id:"request-example-1"},"Request example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\n// Initialize the configuration service, and the console automatically obtains the following parameters through the sample code.\nString serverAddr = "{serverAddr}";\nString dataId = "{dataId}";\nString group = "{group}";\nProperties properties = new Properties();\nproperties.put("serverAddr", serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nString content = configService.getConfig(dataId, group, 5000);\nSystem.out.println(content);\nconfigService.addListener(dataId, group, new Listener() {\n    @Override\n    public void receiveConfigInfo(String configInfo) {\n        System.out.println("receive1:" + configInfo);\n    }\n    @Override\n    public Executor getExecutor() {\n        return null;\n    }\n});\n\n// Keep the main thread alive throughout the test, because the configuration subscription runs in a daemon thread, which exits once the main thread exits. The following code is not required in a real environment.\nwhile (true) {\n    try {\n        Thread.sleep(1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n}\n')),(0,r.kt)("h3",{id:"delete-listening"},"Delete Listening"),(0,r.kt)("h4",{id:"description-2"},"Description"),(0,r.kt)("p",null,"Cancel listen configuration. No more notification after cancellation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public void removeListener(String dataId, String group, Listener listener)\n")),(0,r.kt)("h4",{id:"request-parameters-2"},"Request parameters"),(0,r.kt)("div",{class:"bi-table"},(0,r.kt)("table",null,(0,r.kt)("colgroup",null,(0,r.kt)("col",{width:"auto"}),(0,r.kt)("col",{width:"auto"}),(0,r.kt)("col",{width:"auto"})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Name")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Type")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Description"))),(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"dataId")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"string")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},'Configuration ID. Use a naming rule similar to package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the "class" section. Use lower case for all characters. Use alphabetical letters and these four special characters (".", ":", "-", "_") only. Up to 256 characters are allowed.'))),(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"group")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"string")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Configuration group"))),(0,r.kt)("tr",null,(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"listener")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"ConfigChangeListenerAdapter")),(0,r.kt)("td",{rowspan:"1",colSpan:"1"},(0,r.kt)("div",{"data-type":"p"},"Listener. Configuration changes go into the callback function of the listener.")))))),(0,r.kt)("h4",{id:"request-example-2"},"Request example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String serverAddr = "{serverAddr}";\nString dataId = "{dataId}";\nString group = "{group}";\nProperties properties = new Properties();\nproperties.put("serverAddr", serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nconfigService.removeListener(dataId, group, yourListener);\n')),(0,r.kt)("h3",{id:"publish-configuration"},"Publish configuration"),(0,r.kt)("h4",{id:"description-3"},"Description"),(0,r.kt)("p",null,"Publish Nacos configurations automatically to reduce the operation and maintenance cost."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," It uses the same publishing interface to create or modify a configuration. If the specified configuration doesn\u2019t exist, it will create a configuration. If the specified configuration exists, it will update the configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public boolean publishConfig(String dataId, String group, String content) throws NacosException;\n\n@Since 1.4.1\npublic boolean publishConfig(String dataId, String group, String content, String type) throws NacosException;\n\n")),(0,r.kt)("h4",{id:"request-parameters-3"},"Request parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"dataId"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'Configuration ID. Naming rule is similar to package.class (com.taobao.tc.refund.log.level) is used to ensure the global uniqueness We recommend that you define class by business meaning. All characters must be in lower case. Use alphabetical letters and these four special characters (".", ":", "-", "',"_",'") only. Up to 256 characters are allowed.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"group"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'Configuration group. We recommend that you use product name: module name (for example Nacos:Test) to ensure the uniqueness. Use alphabetical letters and these four special characters (".", ":", "-", "',"_",'") only. Up to 128 characters are allowed.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"content"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Configuration content. No more than 100K bytes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"@Since 1.4.1. Configuration type. See com.alibaba.nacos.api.config.ConfigType, default as TEXT.")))),(0,r.kt)("h4",{id:"response-parameters"},"Response parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"left"},"If the publishing is successful")))),(0,r.kt)("h4",{id:"request-example-3"},"Request example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'try {\n    // Initialize the configuration service. Retrieves the following parameters in console with sample code\n    String serverAddr = "{serverAddr}";\n    String dataId = "{dataId}";\n    String group = "{group}";\n    Properties properties = new Properties();\n    properties.put("serverAddr", serverAddr);\n    ConfigService configService = NacosFactory.createConfigService(properties);\n    boolean isPublishOk = configService.publishConfig(dataId, group, "content");\n    System.out.println(isPublishOk);\n} catch (NacosException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n}\n')),(0,r.kt)("h4",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,"In case of reading configuration timeout or network issues, ConfigException exception is thrown."),(0,r.kt)("h3",{id:"delete-configuration"},"Delete configuration"),(0,r.kt)("h4",{id:"description-4"},"Description"),(0,r.kt)("p",null,"It deletes Nacos configurations automatically with program to reduce operation and maintenance costs with automation."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," If the specified configuration exists, then it deletes the configuration. If the specified configuration doesn\u2019t exist, then it returns a successful message."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public boolean removeConfig(String dataId, String group) throws NacosException\n\n")),(0,r.kt)("h4",{id:"request-parameters-4"},"Request parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"dataId"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Configuration ID")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"group"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Configuration group")))),(0,r.kt)("h4",{id:"response-parameters-1"},"Response parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"left"},"If the deletion is successful")))),(0,r.kt)("h4",{id:"request-example-4"},"Request example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'try {\n    // Initialize the configuration service. Retrieves the following parameters in console with sample code\n    String serverAddr = "{serverAddr}";\n    String dataId = "{dataId}";\n    String group = "{group}";\n    Properties properties = new Properties();\n    properties.put("serverAddr", serverAddr);\n\n    ConfigService configService = NacosFactory.createConfigService(properties);\n    boolean isRemoveOk = configService.removeConfig(dataId, group);\n    System.out.println(isRemoveOk);\n} catch (NacosException e) {\n    // TODO Auto-generated catch block\n    e.printStackTrace();\n}\n')),(0,r.kt)("h4",{id:"exceptions-1"},"Exceptions"),(0,r.kt)("p",null,"In case of reading configuration timeout or network issues, ConfigException exception is thrown."),(0,r.kt)("h2",{id:"service-discovery-sdk"},"Service Discovery SDK"),(0,r.kt)("h3",{id:"register-instance"},"Register Instance"),(0,r.kt)("h4",{id:"description-5"},"Description"),(0,r.kt)("p",null,"Register an instance to service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"void registerInstance(String serviceName, String ip, int port) throws NacosException;\n\nvoid registerInstance(String serviceName, String ip, int port, String clusterName) throws NacosException;\n\nvoid registerInstance(String serviceName, Instance instance) throws NacosException;\n")),(0,r.kt)("h4",{id:"request-parameters-5"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"serviceName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"service name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ip"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"instance ip")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"port"),(0,r.kt)("td",{parentName:"tr",align:"left"},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"instance port")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"clusterName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"cluster name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"instance"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Refer to Java docs"),(0,r.kt)("td",{parentName:"tr",align:null},"instance properties")))),(0,r.kt)("h4",{id:"response"},"Response"),(0,r.kt)("p",null,"void"),(0,r.kt)("h4",{id:"request-example-5"},"Request Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'NamingService naming = NamingFactory.createNamingService(System.getProperty("serveAddr"));\nnaming.registerInstance("nacos.test.3", "11.11.11.11", 8888, "TEST1");\n\nInstance instance = new Instance();\ninstance.setIp("55.55.55.55");\ninstance.setPort(9999);\ninstance.setHealthy(false);\ninstance.setWeight(2.0);\nMap<String, String> instanceMeta = new HashMap<>();\ninstanceMeta.put("site", "et2");\ninstance.setMetadata(instanceMeta);\n\nService service = new Service("nacos.test.4");\nservice.setApp("nacos-naming");\nservice.setHealthCheckMode("server");\nservice.setProtectThreshold(0.8F);\nservice.setGroup("CNCF");\nMap<String, String> serviceMeta = new HashMap<>();\nserviceMeta.put("symmetricCall", "true");\nservice.setMetadata(serviceMeta);\ninstance.setService(service);\n\nCluster cluster = new Cluster();\ncluster.setName("TEST5");\nAbstractHealthChecker.Http healthChecker = new AbstractHealthChecker.Http();\nhealthChecker.setExpectedResponseCode(400);\nhealthChecker.setCurlHost("USer-Agent|Nacos");\nhealthChecker.setCurlPath("/xxx.html");\ncluster.setHealthChecker(healthChecker);\nMap<String, String> clusterMeta = new HashMap<>();\nclusterMeta.put("xxx", "yyyy");\ncluster.setMetadata(clusterMeta);\n\ninstance.setCluster(cluster);\n\nnaming.registerInstance("nacos.test.4", instance);\n')),(0,r.kt)("h3",{id:"deregister-instance"},"Deregister Instance"),(0,r.kt)("h4",{id:"description-6"},"Description"),(0,r.kt)("p",null,"Remove instance from service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"void deregisterInstance(String serviceName, String ip, int port) throws NacosException;\n\nvoid deregisterInstance(String serviceName, String ip, int port, String clusterName) throws NacosException;\n")),(0,r.kt)("h4",{id:"request-parameters-6"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"serviceName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"service name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ip"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"instance ip")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"port"),(0,r.kt)("td",{parentName:"tr",align:"left"},"int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"instance port")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"clusterName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cluster name")))),(0,r.kt)("h4",{id:"response-1"},"Response"),(0,r.kt)("p",null,"None"),(0,r.kt)("h4",{id:"request-example-6"},"Request Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'NamingService naming = NamingFactory.createNamingService(System.getProperty("serveAddr"));\nnaming.deregisterInstance("nacos.test.3", "11.11.11.11", 8888, "DEFAULT");\n')),(0,r.kt)("h3",{id:"get-all-instances-of-service"},"Get all instances of service"),(0,r.kt)("h4",{id:"description-7"},"Description"),(0,r.kt)("p",null,"Get all instances of service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"List<Instance> getAllInstances(String serviceName) throws NacosException;\n\nList<Instance> getAllInstances(String serviceName, List<String> clusters) throws NacosException;\n")),(0,r.kt)("h4",{id:"request-parameters-7"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"serviceName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"service name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"clusters"),(0,r.kt)("td",{parentName:"tr",align:"left"},"List"),(0,r.kt)("td",{parentName:"tr",align:null},"cluster list")))),(0,r.kt)("h4",{id:"response-2"},"Response"),(0,r.kt)("p",null,"List","<","Instance> instance list\u3002"),(0,r.kt)("h4",{id:"request-example-7"},"Request Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'NamingService naming = NamingFactory.createNamingService(System.getProperty("serveAddr"));\nSystem.out.println(naming.getAllInstances("nacos.test.3"));\n')),(0,r.kt)("h3",{id:"get-filtered-list-of-instance"},"Get filtered list of instance"),(0,r.kt)("h4",{id:"description-8"},"Description"),(0,r.kt)("p",null,"Get healthy or unhealthy instances of service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"List<Instance> selectInstances(String serviceName, boolean healthy) throws NacosException;\n\nList<Instance> selectInstances(String serviceName, List<String> clusters, boolean healthy) throws NacosException;\n")),(0,r.kt)("h4",{id:"request-parameters-8"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"serviceName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"service name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"clusters"),(0,r.kt)("td",{parentName:"tr",align:"left"},"List"),(0,r.kt)("td",{parentName:"tr",align:null},"cluster list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"healthy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"healthy or not")))),(0,r.kt)("h4",{id:"response-3"},"Response"),(0,r.kt)("p",null,"List","<","Instance> instance list."),(0,r.kt)("h4",{id:"request-example-8"},"Request Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'NamingService naming = NamingFactory.createNamingService(System.getProperty("serveAddr"));\nSystem.out.println(naming.selectInstances("nacos.test.3", true));\n')),(0,r.kt)("h3",{id:"get-one-healthy-instance"},"Get one healthy instance"),(0,r.kt)("h4",{id:"description-9"},"Description"),(0,r.kt)("p",null,"Get one healthy instance selected by load-balance strategy."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Instance selectOneHealthyInstance(String serviceName) throws NacosException;\n\nInstance selectOneHealthyInstance(String serviceName, List<String> clusters) throws NacosException;\n")),(0,r.kt)("h4",{id:"request-parameters-9"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"serviceName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"service name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"clusters"),(0,r.kt)("td",{parentName:"tr",align:"left"},"List"),(0,r.kt)("td",{parentName:"tr",align:null},"cluster list")))),(0,r.kt)("h4",{id:"response-4"},"Response"),(0,r.kt)("p",null,"Instance"),(0,r.kt)("h4",{id:"request-example-9"},"Request Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'NamingService naming = NamingFactory.createNamingService(System.getProperty("serveAddr"));\nSystem.out.println(naming.selectOneHealthyInstance("nacos.test.3"));\n')),(0,r.kt)("h3",{id:"listen-service"},"Listen Service"),(0,r.kt)("h4",{id:"description-10"},"Description"),(0,r.kt)("p",null,"Listen for changes of instances under a service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"void subscribe(String serviceName, EventListener listener) throws NacosException;\n\nvoid subscribe(String serviceName, List<String> clusters, EventListener listener) throws NacosException;\n")),(0,r.kt)("h4",{id:"request-parameters-10"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"serviceName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"service name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"clusters"),(0,r.kt)("td",{parentName:"tr",align:"left"},"List"),(0,r.kt)("td",{parentName:"tr",align:null},"cluster list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"listener"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EventListener"),(0,r.kt)("td",{parentName:"tr",align:null},"event listener")))),(0,r.kt)("h4",{id:"response-5"},"Response"),(0,r.kt)("p",null,"void"),(0,r.kt)("h4",{id:"request-example-10"},"Request Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'NamingService naming = NamingFactory.createNamingService(System.getProperty("serveAddr"));\nnaming.subscribe("nacos.test.3", event -> {\n    if (event instanceof NamingEvent) {\n        System.out.println(((NamingEvent) event).getServceName());\n        System.out.println(((NamingEvent) event).getInstances());\n    }\n});\n')),(0,r.kt)("h3",{id:"unlisten-service"},"Unlisten Service"),(0,r.kt)("h4",{id:"description-11"},"Description"),(0,r.kt)("p",null,"Cancel listening service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"void unsubscribe(String serviceName, EventListener listener) throws NacosException;\n\nvoid unsubscribe(String serviceName, List<String> clusters, EventListener listener) throws NacosException;\n")),(0,r.kt)("h4",{id:"request-parameters-11"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"serviceName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"service name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"clusters"),(0,r.kt)("td",{parentName:"tr",align:"left"},"List"),(0,r.kt)("td",{parentName:"tr",align:null},"cluster list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"listener"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EventListener"),(0,r.kt)("td",{parentName:"tr",align:null},"event listener")))),(0,r.kt)("h4",{id:"response-6"},"Response"),(0,r.kt)("p",null,"void"),(0,r.kt)("h4",{id:"request-example-11"},"Request Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'NamingService naming = NamingFactory.createNamingService(System.getProperty("serveAddr"));\nnaming.unsubscribe("nacos.test.3", event -> {});\n')))}u.isMDXComponent=!0}}]);